import Head from "next/head";
import React, { createContext, useState, useEffect } from "react";
import Footer from "@/components/_organisms/Footer";
import Navbar from "@/components/_organisms/NavBar";
import Hero from "@/components/_organisms/Hero";

type ThemeContextType = {
  darkMode: boolean;
  toggleTheme: () => void;
};

const ThemeContext = createContext<ThemeContextType>({
  darkMode: false,
  toggleTheme: () => {},
});

interface ApiResponse {
  info: {
    name: string;
    position: string;
    summary: string;
    resumeLink: string;
    avatar: {
      src: string;
      alt: string;
    };
  };
}

export default function Home() {
  const [darkMode, setDarkMode] = useState(false);
  const [data, setData] = useState<ApiResponse | null>(null);
  const toggleTheme = () => {
    setDarkMode(!darkMode);
  };

  useEffect(() => {
    const fetchData = async () => {
      try {
        const response = await fetch("/api/data");
        const result = await response.json();
        setData(result);
      } catch (error) {
        console.error("Error fetching data:", error);
      }
    };

    fetchData();
  }, []);

  return (
    <>
      <Head>
        <title>Avinash Rao | Portfolio</title>
        <meta name='description' content='Generated by create next app' />
        <meta name='viewport' content='width=device-width, initial-scale=1' />
        <link rel='icon' href='/favicon.ico' />
      </Head>
      <ThemeContext.Provider value={{ darkMode, toggleTheme }}>
        <main className={`${darkMode ? "bg-gray-800 p-4" : "p-4"}`}>
          <Navbar />
          {data ? <Hero info={data?.info} /> : <div>Loading...</div>} <Footer />
        </main>
      </ThemeContext.Provider>
    </>
  );
}
